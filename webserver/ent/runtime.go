// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/koalatea/go-project-skeleton/ent/schema"
	"github.com/koalatea/go-project-skeleton/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for Name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	user.NameValidator = func() func(string) error {
		validators := userDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(_Name string) error {
			for _, fn := range fns {
				if err := fn(_Name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescSessionToken is the schema descriptor for SessionToken field.
	userDescSessionToken := userFields[2].Descriptor()
	// user.DefaultSessionToken holds the default value on creation for the SessionToken field.
	user.DefaultSessionToken = userDescSessionToken.Default.(func() string)
	// user.SessionTokenValidator is a validator for the "SessionToken" field. It is called by the builders before save.
	user.SessionTokenValidator = userDescSessionToken.Validators[0].(func(string) error)
	// userDescIsActivated is the schema descriptor for IsActivated field.
	userDescIsActivated := userFields[3].Descriptor()
	// user.DefaultIsActivated holds the default value on creation for the IsActivated field.
	user.DefaultIsActivated = userDescIsActivated.Default.(bool)
}
